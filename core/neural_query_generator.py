from docx import Document
from docx.shared import Inches
from docx.enum.text import WD_ALIGN_PARAGRAPH
import os
import logging

log = logging.getLogger(__name__)

def create_neural_query_document(output_path: str):
    """
    Створює документ Word з запитом для нейромережі по генерації тестів.
    
    Args:
        output_path: Шлях для збереження документа
    """
    try:
        # Створюємо новий документ
        doc = Document()
        
        # Заголовок
        title = doc.add_heading('Запит для нейромережі: Генерація тестів', 0)
        title.alignment = WD_ALIGN_PARAGRAPH.CENTER
        
        # Основний запит
        doc.add_heading('Запит для ШІ:', level=1)
        
        query_text = """
Згенеруй таблицю для тестування завдань на [КІЛЬКІСТЬ] питань, складність "[СКЛАДНІСТЬ]" та тему "[ТЕМА]". Уточни в діалозі кожен пункт.

У відповідь я хочу отримати Excel таблицю:

1-й стовпчик: Номер завдання (зроби по декілька варіантів першого завдання для варіативності різних варіантів, декілька другого тощо)
2-й стовпчик: Саме завдання в текстовому форматі
3-й стовпчик: Правильний тестовий варіант або правильна відповідь. Якщо питання тестове - вказати правильний номер відповіді (1, 2, 3, 4 тощо). Якщо з відкритою відповідю - вказати текст правильної відповіді. ВАЖЛИВО для відкритих питань: відповідь має бути однозначною, без варіацій, уникайте індексів та позначень, використовуйте одні й ті ж одиниці вимірювання, віддавайте перевагу одному слову або числу
4-й стовпчик: Відносна вага завдання. Для більш складних завдань пропонується робити число 2, 3 проти 1 за звичайне завдання
5-й стовпчик і далі: Варіанти відповіді. Якщо питання з відкритою відповідю ці варіанти не треба заповнювати. Якщо є варіанти відповіді, то необхідно зробити мінімум два варіанти, де кожен варіант в окремому стовпчику починаючи з цього

⚠️ ВАЖЛИВО ДЛЯ МАТЕМАТИЧНИХ ФОРМУЛ:
Всі математичні вирази будуть автоматично розпізнаватися та форматуватися у Word документі. Тому:
- Використовуйте дроби у форматі (чисельник)/(знаменник), наприклад: (x-1)/(x+1)
- Використовуйте степені у форматі основа^показник, наприклад: x^2, 2^3
- Додавайте дужки для складних виразів: (a+b)^2, (x-1)/(x+1)
- Для коренів використовуйте sqrt(вираз): sqrt(x^2+1)
- Для змішаних чисел використовуйте пробіл між цілою та дробовою частиною: "1 3/5" (одна ціла і три п'ятих). НЕ використовуйте підкреслення (1_3/5), оскільки Word інтерпретує _ як нижній індекс
- Розділяйте окремі математичні вирази пробілами для кращої читабельності: "(7/8) - (1/2)" замість "(7/8)-(1/2)", "1 (1/3)" замість "1(1/3)"

Приклад:
1 | Яка мова використовується для веб-розробки? | 1 | 2 | JavaScript | Python | C++ | Java
1 | Що таке HTML? | 2 | 1 | Мова програмування | Мова розмітки | База даних | ОС
2 | Яке максимальне число в двійковій системі з 2 розрядів | 3 | 3 | | | |
3 | Скільки буде 2+2? | 3 | 1 | 3 | 5 | 4 | 6
4 | Спростіть вираз (x^2-1)/(x-1) | x+1 | 2 | | | |
5 | Обчисліть значення виразу 2^3+sqrt(16) | 12 | 3 | | | |

Замініть [КІЛЬКІСТЬ], [СКЛАДНІСТЬ] та [ТЕМА] на ваші значення.
"""
        
        # Додаємо запит в документ
        query_paragraph = doc.add_paragraph(query_text)
        query_paragraph.style = 'Normal'
        
        # Розділ з примітками
        doc.add_heading('Важливі примітки:', level=1)
        
        notes = [
            "Замініть [ТЕМА] на конкретну тему вашого тесту (наприклад: 'Основи програмування', 'Історія України', 'Математика 8 клас')",
            "Замініть [СКЛАДНІСТЬ] на бажаний рівень (наприклад: 'початковий', 'середній', 'просунутий', 'для 8 класу')",
            "Замініть [КІЛЬКІСТЬ] на потрібну кількість (наприклад: '10', '15', '20')",
            "Нейромережа створить таблицю в текстовому форматі - скопіюйте її в Excel",
            "ВАЖЛИВО: Видаліть рядок з інструкціями в шаблоні перед заповненням - дані повинні починатися з другого рядка",
            "Переконайтеся, що дані починаються з другого рядка",
            "Для створення опціональних питань попросіть нейромережу створити декілька варіантів з однаковими номерами"
        ]
        
        for note in notes:
            p = doc.add_paragraph()
            p.add_run('• ').bold = True
            p.add_run(note)
        
        # Розділ з прикладом готового запиту
        doc.add_heading('Приклад готового запиту:', level=1)
        
        example_query = """
Створи тест на тему "Основи веб-розробки" рівня складності "середній" у форматі Excel таблиці.

[... весь текст запиту вище ...]

Створи 15 питань на тему "Основи веб-розробки" з рівнем складності "середній".
Включи різні типи питань: з вибором відповіді та відкриті.
Розподіли ваги від 1 до 5 залежно від складності кожного конкретного питання.
"""
        
        example_paragraph = doc.add_paragraph(example_query)
        example_paragraph.style = 'Normal'
        
        # Рекомендації для питань з відкритою відповіддю
        doc.add_heading('Рекомендації для питань з відкритою відповіддю:', level=1)
        
        open_ended_recommendations = [
            "Відповіді повинні бути однозначними та не допускати варіацій",
            "Уникайте індексів, номерів або позначень (наприклад: 'перший', 'другий', 'а)', 'б)')",
            "Використовуйте одні й ті ж одиниці вимірювання в питанні та відповіді",
            "Віддавайте перевагу відповідям з одного слова або числа",
            "Для числових відповідей обов'язково вказуйте правила округлення"
        ]
        
        for rec in open_ended_recommendations:
            p = doc.add_paragraph()
            p.add_run('⚠️ ').bold = True
            p.add_run(rec)
        
        # Приклади правильних та неправильних питань
        doc.add_heading('Приклади питань з відкритою відповіддю:', level=2)
        
        doc.add_paragraph().add_run('✅ Правильні приклади:').bold = True
        correct_examples = [
            "Скільки днів у лютому високосного року? Відповідь: 29",
            "Яка столиця Франції? Відповідь: Париж",
            "Скільки сантиметрів у одному метрі? Відповідь: 100",
            "Яка хімічна формула води? Відповідь: H2O"
        ]
        
        for example in correct_examples:
            p = doc.add_paragraph()
            p.add_run('• ').bold = True
            p.add_run(example)
        
        doc.add_paragraph().add_run('❌ Неправильні приклади:').bold = True
        incorrect_examples = [
            "Який перший елемент таблиці Менделєєва? (уникайте 'перший')",
            "Скільки метрів у кілометрі, відповідь у сантиметрах? (різні одиниці)",
            "Назвіть найбільшу планету? (може бути 'найбільша' або 'Юпітер')",
            "Скільки приблизно важить слон? (без точного округлення)"
        ]
        
        for example in incorrect_examples:
            p = doc.add_paragraph()
            p.add_run('• ').bold = True
            p.add_run(example)
        
        # Фінальні рекомендації
        doc.add_heading('Рекомендації по використанню:', level=1)
        
        recommendations = [
            "Використовуйте цей запит з ChatGPT, Claude, Gemini або іншими нейромережами",
            "Після отримання відповіді скопіюйте таблицю в Excel та збережіть файл",
            "Завантажте створений файл в систему TeacherTest для генерації варіантів",
            "Перевірте правильність форматування перед використанням",
            "За необхідності відредагуйте питання та відповіді вручну"
        ]
        
        for rec in recommendations:
            p = doc.add_paragraph()
            p.add_run('✓ ').bold = True
            p.add_run(rec)
        
        # Создаем директорию если не существует
        os.makedirs(os.path.dirname(output_path), exist_ok=True)
        
        # Сохраняем документ
        doc.save(output_path)
        log.info(f"Документ з запитом для нейромережі створено: {output_path}")
        
    except Exception as e:
        log.error(f"Помилка при створенні документа з запитом: {e}")
        raise